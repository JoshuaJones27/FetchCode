ForNode(suggestion.valueDeclaration, ts.Diagnostics._0_is_declared_here, suggestionName));
                                }
                            }
                        }
                        if (!suggestion) {
                            if (nameArg) {
                                var lib = getSuggestedLibForNonExistentName(nameArg);
                                if (lib) {
                                    error(errorLocation, nameNotFoundMessage, diagnosticName(nameArg), lib);
                                }
                                else {
                                    error(errorLocation, nameNotFoundMessage, diagnosticName(nameArg));
                                }
                            }
                        }
                        suggestionCount++;
                    }
                }
                return undefined;
            }
            // Perform extra checks only if error reporting was requested
            if (nameNotFoundMessage && produceDiagnostics) {
                if (propertyWithInvalidInitializer && !(ts.getEmitScriptTarget(compilerOptions) === 99 /* ESNext */ && useDefineForClassFields)) {
                    // We have a match, but the reference occurred within a property initializer and the identifier also binds
                    // to a local variable in the constructor where the code will be emitted. Note that this is actually allowed
                    // with ESNext+useDefineForClassFields bec